Write-Host "-Jeff Rudolph 2024-`n"

Write-Host "This script is to be used after the script FindOldUnusedADAccounts.ps1."
Write-Host "The script will take two spreadsheet files, one is the Active Directory staff report generated by FindOldUnusedADAccounts.ps1"
Write-Host "The other spreadsheet you will need is an up to date nVision spreadsheet containing active staff with their full email addresses as a column."
Write-Host "This script will compare the unused accounts in active directory with the list of active staff to determine which staff are no longer in the district."
Write-Host "At the end this script will generate a spreadsheet of all the staff accounts that are safe to be disabled by IT staff. If the spreadsheet is empty no accounts were found to be disabled.`n"

$todaysDate = Get-Date -UFormat "%m_%d_%Y_At%H_%M_%S%p"

$ADfilePath = Read-Host "Enter the full filepath of the Active Directory staff spreadsheet"

$ADspreadSheet = Import-Csv -Path $ADfilepath

#SamAccountName saved in AD is the same as email usernames
$listOfADStaffEmails = $ADspreadSheet.SamAccountName

$nVisionFilePath = Read-Host "Enter the full filepath of the nVision  spreadsheet (Needs to have column named Email)"
$nVisionSpreadSheet = Import-Csv -Path $nVisionFilePath

#Removes null email addresses in case any exist in the data
$nVisionEmailList = $nVisionSpreadSheet.Email.Where({$null -ne $_ -and $_ -ne ""})

#initializing empty array to strip domain name from email addresses to match AD SamAccountName
#done this way as not every email address has the same domain on their email
$nVisionEmailUsernameList = @()

Foreach($email in $nVisionEmailList){
$nVisionEmailUsernameList += $email.Split("@")[0] }


$accountsToDisable = Compare-Object -ReferenceObject $listOfADStaffEmails -DifferenceObject $nVisionEmailUsernameList | Where-Object {$_.SideIndicator -eq "<="}

$accountsToDisableFolder = New-Item -Path $PSScriptRoot -Name "StaffAccountsToDisable" -ItemType Directory -Force
$accountsToDisableFilename = Join-Path -Path $accountsToDisableFolder -ChildPath "$todaysDate-AccountsToDisable.csv"
$accountsToDisable.InputObject | ForEach-Object {[PSCustomObject]@{SamAccountName=$_}} | Export-Csv -Path $accountsToDisableFilename -NoTypeInformation

Write-Host "`nFile of inactive Active Directory staff accounts ready to be disabled saved here -> $accountsToDisableFilename "

Write-Host "`nScript Finished - Press any key to exit..."
$Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")